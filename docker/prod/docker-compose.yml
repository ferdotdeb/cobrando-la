name: cobrando-la-prod

services:
  django:
    build:
      context: ../../ # <- Esto apunta a la raÃ­z del repo
      dockerfile: docker/prod/Dockerfile
    env_file:
      - ../../.env
    volumes:
      - "${DOCKER_PROD_DJANGO_STATICFILES_PATH}:/app/staticfiles"
      - "${DOCKER_PROD_DJANGO_UPLOADS_PATH}:/app/uploads"
    ports:
      - "${DOCKER_PROD_DJANGO_PORT}:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
    restart: always
    command: >
      sh -c "
      python manage.py tailwind install && python manage.py tailwind build &&

      if [ \"$DOCKER_PROD_DJANGO_RUN_MIGRATIONS\" = \"true\" ]; then
          echo 'Ejecutando migraciones...'
          python manage.py migrate
      fi &&

      if [ "$DOCKER_PROD_DJANGO_RUN_COLLECTSTATIC" = "true" ]; then
          echo 'Ejecutando collectstatic...'
          python manage.py collectstatic --noinput
      fi &&

      echo 'Iniciando gunicorn' &&
      gunicorn --bind 0.0.0.0:8000 --workers ${DOCKER_PROD_DJANGO_GUNICORN_WORKERS:-3} --threads ${DOCKER_PROD_DJANGO_GUNICORN_THREADS:-3} --timeout 120 cobrando_la.wsgi:application &&
      echo 'Gunicorn finalizado.'
      "

  postgres_db:
    image: postgres:18-alpine
    volumes:
      - postgres_db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DOCKER_PROD_POSTGRES_DB_NAME}
      - POSTGRES_USER=${DOCKER_PROD_POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${DOCKER_PROD_POSTGRES_DB_PASSWORD}
      - TZ=America/Mexico_City
    ports:
      - "${DOCKER_PROD_POSTGRES_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  postgres_db_data: